package org.ricebin.sstable;

import static com.google.common.truth.Truth.assertThat;

import org.junit.Test;
import org.ricebin.slice.ByteBufferSlice;
import org.ricebin.slice.Slice;
import org.ricebin.slice.Slice.Factory.Sink;

// https://github.com/google/leveldb/blob/master/util/hash_test.cc
public class HashTest {

  @Test
  public void testHappy() {
    assertHash(0xbc9f1d34, 0xbc9f1d34);
    assertHash(0xef1345c4, 0xbc9f1d34, 0x62);
    assertHash(0x5b663814, 0xbc9f1d34, 0xc3, 0x97);
    assertHash(0x323c078f, 0xbc9f1d34, 0xe2, 0x99, 0xa5);
    assertHash(0xed21633a, 0xbc9f1d34, 0xe1, 0x80, 0xb9, 0x32);
    assertHash(0xf333dabb, 0x12345678,
        0x01, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00,
        0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x18, 0x28, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00);
  }

  private static void assertHash(int expectedHash, int seed, int... input) {
    Sink<ByteBufferSlice> sink = ByteBufferSlice.FACTORY.newFixedSizeSink(input.length);
    for (int i : input) {
      sink.putByte((byte) i);
    }
    Slice slice = sink.finish();
    assertThat(Hash.hash(slice, seed)).isEqualTo(expectedHash);
  }

}